create type partner_type as enum ('tools', 'gpts');
create type pricing_model_type as enum ('free', 'free trial', 'freemium', 'paid', 'price unknown');
create type status_type as enum ('wait_deal', 'refuse', 'employ');

create table partner_contacts (
  id bigint generated by default as identity primary key,
  type partner_type not null,
  name text not null,
  website_url text not null,
  description text not null,
  category text not null,
  developer text not null,
  email text not null,
  logo text not null,
  images text[],
  overview text not null,
  tags text[] not null,
  pricing_model pricing_model_type not null,
  have_detail boolean default false,
  create_time timestamp with time zone default timezone('utc'::text, now()) not null,
  status status_type not null
);
alter table partner_contacts enable row level security;

create policy "Enable public insert" on partner_contacts for insert with check (true);


create table partners (
  id bigint generated by default as identity primary key,
  slug text not null unique,
  type partner_type not null,
  name text not null,
  website_url text not null,
  description text not null,
  category text not null,
  developer text not null,
  email text not null,
  logo text not null,
  images text[],
  overview text not null,
  approved boolean default false,
  contact_id bigint,
  create_time timestamp with time zone default timezone('utc'::text, now()) not null,
  tags text[],
  pricing_model pricing_model_type not null,
  have_detail boolean default false,
  tsv tsvector generated always as (
    setweight(to_tsvector('english', name), 'A')
      || setweight(to_tsvector('english', description), 'B')
      || setweight(to_tsvector('english', overview), 'C')
      || setweight(to_tsvector('english', category), 'D')
      || setweight(to_tsvector('english', slug), 'D')
  ) stored
);
alter table partners enable row level security;

create policy "Enable public read access" on partners for select using (true);
